setwd("/Users/xolanisibande/Desktop/hong_tests_201912")
rm(list=ls())
Sys.setenv(TZ="Africa/Johannesburg")
theme <- theme_minimal(base_size = 6)  + theme(axis.text.x = element_text(angle = 90))
theme_set(theme)
col1 <- "#ffffff"
col2 <- "#000000"
#Sheet Import Function
Sheets_import<- function(path){
data<- path %>%
excel_sheets() %>%
purrr::set_names() %>%
map(read_excel,  col_names = TRUE, path=path)
}
# Importing Sheets
Sheets <-Sheets_import("Xolani.xlsx")
#Converting to date type ----
date_replace1 <- function(list) {
str_replace_all(list, fixed("M"), "-")
}
date_replace2 <- function(list) {
str_replace_all(list, fixed(","), "-")
}
Sheets[[4]][1] <- Sheets[[4]][1] %>%  map (date_replace1)
Sheets[[4]][1] <- Sheets[[4]][1] %>%  map (date_replace2)
Sheets$Bonds3$Period <- paste(Sheets$Bonds3$Period,"-01", sep = "")
Sheets$Bonds3$Period <- as.yearmon(as.Date(Sheets$Bonds3$Period, format = "%Y-%m-%d"))
#Defining Variables ----
u = Sheets$Bonds3$`Corporate Bond Returns`
u
#Importing
results <- read.csv("mgarch_Hong_Granger_Bond3.csv")
#Renaming ----
results[, 1] <- NULL
colnames(results) <- c("date","H1","ph1","H2","ph2","H10","ph10","H20","ph20","Hb","phb")
Bonds3 <- results
#Merging dates for graphing
Bonds3$date <- Sheets$Bonds3$Period[-1]
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
Bonds3$ph1 <- discrete(Bonds3$ph1)
Bonds3$ph2<- discrete(Bonds3$ph2)
Bonds3$ph10<- discrete(Bonds3$ph10)
Bonds3$ph20<- discrete(Bonds3$ph20)
Bonds3$phb<- discrete(Bonds3$phb)
#Exporting Bonds1
write.csv(Bonds1, file="Bonds3.csv", row.names = F);
#Graphing
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(Bonds3, y.var = H1, z.var = ph1, plot.name = "Bonds3_ph1")
rug_plot(Bonds3, y.var = H2, z.var = ph2, plot.name = "Bonds3_ph2")
rug_plot(Bonds3, y.var = H10, z.var = ph10, plot.name = "Bonds3_ph10")
rug_plot(Bonds3, y.var = H20, z.var = ph20, plot.name = "Bonds3_ph20")
rug_plot(Bonds3, y.var = Hb, z.var = phb, plot.name = "Bonds3_phb")
# DCC-GARCH+ time-varying Haugh and Hong tests
# using DCC-GARCH to get the correlation coeffecients with lag i, -k<i<k, k; diagonal GARCH model estimation
# M is the lag order in the statistics;
# Barllet functions, M
#Preliminary
library(ccgarch)
library(dplyr)
library(purrr)
library(readxl)
library(stringr)
library(zoo)
setwd("/Users/xolanisibande/Desktop/hong_tests_201912")
rm(list=ls())
Sys.setenv(TZ="Africa/Johannesburg")
theme <- theme_minimal(base_size = 6)  + theme(axis.text.x = element_text(angle = 90))
theme_set(theme)
col1 <- "#ffffff"
col2 <- "#000000"
#Sheet Import Function
Sheets_import<- function(path){
data<- path %>%
excel_sheets() %>%
purrr::set_names() %>%
map(read_excel,  col_names = TRUE, path=path)
}
# Importing Sheets
Sheets <-Sheets_import("Xolani.xlsx")
Sheets
# DCC-GARCH+ time-varying Haugh and Hong tests
# using DCC-GARCH to get the correlation coeffecients with lag i, -k<i<k, k; diagonal GARCH model estimation
# M is the lag order in the statistics;
# Barllet functions, M
#Preliminary
library(ccgarch)
library(dplyr)
library(purrr)
library(readxl)
library(stringr)
library(zoo)
setwd("/Users/xolanisibande/Desktop/hong_tests_201912")
rm(list=ls())
Sys.setenv(TZ="Africa/Johannesburg")
theme <- theme_minimal(base_size = 6)  + theme(axis.text.x = element_text(angle = 90))
theme_set(theme)
col1 <- "#ffffff"
col2 <- "#000000"
#Sheet Import Function
Sheets_import<- function(path){
data<- path %>%
excel_sheets() %>%
purrr::set_names() %>%
map(read_excel,  col_names = TRUE, path=path)
}
# Importing Sheets
Sheets <-Sheets_import("Xolani.xlsx")
#Converting to date type ----
date_replace1 <- function(list) {
str_replace_all(list, fixed("M"), "-")
}
date_replace2 <- function(list) {
str_replace_all(list, fixed(","), "-")
}
Sheets[[5]][1] <- Sheets[[5]][1] %>%  map (date_replace1)
Sheets[[5]][1] <- Sheets[[5]][1] %>%  map (date_replace2)
Sheets$Residual$Period <- paste(Sheets$Residual$Period,"-01", sep = "")
Sheets$Residual$Period <- as.yearmon(as.Date(Sheets$Residual$Period, format = "%Y-%m-%d"))
head(Sheets$Residual$Period)
tail(Sheets$Residual$Period)
source('~/Desktop/hong_tests_201912/hong_Residual.R', echo=TRUE)
source('~/Desktop/hong_tests_201912/hong_Residual.R', echo=TRUE)
source('~/Desktop/hong_tests_201912/hong_Bond1.R', echo=TRUE)
source('~/Desktop/hong_tests_201912/hong_Bond2.R', echo=TRUE)
source('~/Desktop/hong_tests_201912/hong_Bond3.R', echo=TRUE)
# DCC-GARCH+ time-varying Haugh and Hong tests
# using DCC-GARCH to get the correlation coeffecients with lag i, -k<i<k, k; diagonal GARCH model estimation
# M is the lag order in the statistics;
# Barllet functions, M
#Preliminary
library(ccgarch)
library(dplyr)
library(purrr)
library(readxl)
library(stringr)
library(zoo)
setwd("/Users/xolanisibande/Desktop/hong_tests_201912")
rm(list=ls())
Sys.setenv(TZ="Africa/Johannesburg")
#Sheet Import Function
Sheets_import<- function(path){
data<- path %>%
excel_sheets() %>%
purrr::set_names() %>%
map(read_excel,  col_names = TRUE, path=path)
}
# Importing Sheets
Sheets <-Sheets_import("Xolani.xlsx")
Sheets
source('~/Desktop/hong_tests_201912/hong_Volatility.R', echo=TRUE)
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2)) +
coord_cartesian(clip = "off")
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
rug_plot(Volatility, y.var = H2, z.var = ph2, plot.name = "Volatility_ph2")
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
rug_plot(Volatility, y.var = H20, z.var = ph20, plot.name = "Volatility_ph20")
rug_plot(Volatility, y.var = Hb, z.var = phb, plot.name = "Volatility_phb")
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2)) +
coord_cartesian(clip = "off")
return(ru_plot)
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2)) +
coord_cartesian(clip = "off")
return(rug_plot)
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2)) +
coord_cartesian(clip = "off")
return(plot)
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
rug_plot(Volatility, y.var = H2, z.var = ph2, plot.name = "Volatility_ph2")
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
rug_plot(Volatility, y.var = H20, z.var = ph20, plot.name = "Volatility_ph20")
rug_plot(Volatility, y.var = Hb, z.var = phb, plot.name = "Volatility_phb")
rug_plot(Volatility, y.var = H20, z.var = ph20, plot.name = "Volatility_ph20")
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2)) +
coord_cartesian(clip = "off") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
return(plot)
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
Volatility$ph1
rug_plot(Volatility, y.var = H2, z.var = ph2, plot.name = "Volatility_ph2")
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
rug_plot(Volatility, y.var = H20, z.var = ph20, plot.name = "Volatility_ph20")
rug_plot(Volatility, y.var = Hb, z.var = phb, plot.name = "Volatility_phb")
summary(Volatility$ph1)
Volatility$ph1 <- factor(discrete(Volatility$ph1))
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
summary(Volatility$ph1)
Volatility$ph1 <- discrete(Volatility$ph1)
Volatility$ph1[1600] <- "0"
#Importing----
results <- read.csv("mgarch_Hong_Granger_Volatility.csv")
#Renaming ----
results[, 1] <- NULL
colnames(results) <- c("date","H1","ph1","H2","ph2","H10","ph10","H20","ph20","Hb","phb")
Volatility <- results
#Merging dates for graphing ----
Volatility$date <- Sheets$Volatility$Period[-c(1:7)]
# Discrete p values ----
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
Volatility$ph1 <- discrete(Volatility$ph1)
Volatility$ph1[1600] <- "0"
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
rug_plot(Volatility, y.var = H2, z.var = ph2, plot.name = "Volatility_ph2")
Volatility$ph2<- discrete(Volatility$ph2)
Volatility$ph10<- discrete(Volatility$ph10)
Volatility$ph20<- discrete(Volatility$ph20)
Volatility$phb<- discrete(Volatility$phb)
rug_plot(Volatility, y.var = H2, z.var = ph2, plot.name = "Volatility_ph2")
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
Volatility$ph1[1600] <- "0"
rug_plot(Volatility, y.var = H20, z.var = ph20, plot.name = "Volatility_ph20")
#Renaming ----
results[, 1] <- NULL
colnames(results) <- c("date","H1","ph1","H2","ph2","H10","ph10","H20","ph20","Hb","phb")
Volatility <- results
#Merging dates for graphing ----
Volatility$date <- Sheets$Volatility$Period[-c(1:7)]
# Discrete p values ----
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
Volatility$ph1 <- discrete(Volatility$ph1)
Volatility$ph1[1600] <- "0"
Volatility$ph2<- discrete(Volatility$ph2)
Volatility$ph10<- discrete(Volatility$ph10)
Volatility$ph20<- discrete(Volatility$ph20)
Volatility$phb<- discrete(Volatility$phb)
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
rug_plot(Volatility, y.var = H2, z.var = ph2, plot.name = "Volatility_ph2")
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
rug_plot(Volatility, y.var = H20, z.var = ph20, plot.name = "Volatility_ph20")
rug_plot(Volatility, y.var = Hb, z.var = phb, plot.name = "Volatility_phb")
Volatility$ph10<- discrete(Volatility$ph10)
Volatility$ph10[1600] <- "0"
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
Volatility$ph10<- discrete(Volatility$ph10)
Volatility$ph10[1600] <- "0"
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
rug_plot(Volatility, y.var = H20, z.var = ph20, plot.name = "Volatility_ph20")
rug_plot(Volatility, y.var = Hb, z.var = phb, plot.name = "Volatility_phb")
Volatility$phb<- discrete(Volatility$phb)
Volatility$ph10[1600] <- "0"
rug_plot(Volatility, y.var = Hb, z.var = phb, plot.name = "Volatility_phb")
#Importing----
results <- read.csv("mgarch_Hong_Granger_Volatility.csv")
#Renaming ----
results[, 1] <- NULL
colnames(results) <- c("date","H1","ph1","H2","ph2","H10","ph10","H20","ph20","Hb","phb")
Volatility <- results
#Merging dates for graphing ----
Volatility$date <- Sheets$Volatility$Period[-c(1:7)]
# Discrete p values ----
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
Volatility$ph1 <- discrete(Volatility$ph1)
Volatility$ph1[1600] <- "0"
Volatility$ph2<- discrete(Volatility$ph2)
Volatility$ph10<- discrete(Volatility$ph10)
Volatility$ph10[1600] <- "0"
Volatility$ph20<- discrete(Volatility$ph20)
Volatility$phb<- discrete(Volatility$phb)
Volatility$phb[1600] <- "0"
#Exporting ----
write.csv(Volatility, file="Volatility.csv", row.names = F);
#Graphing----
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2)) +
coord_cartesian(clip = "off") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
return(plot)
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
rug_plot(Volatility, y.var = H2, z.var = ph2, plot.name = "Volatility_ph2")
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
rug_plot(Volatility, y.var = H20, z.var = ph20, plot.name = "Volatility_ph20")
rug_plot(Volatility, y.var = Hb, z.var = phb, plot.name = "Volatility_phb")
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
rug_plot(Volatility, y.var = H2, z.var = ph2, plot.name = "Volatility_ph2")
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
rug_plot(Volatility, y.var = H20, z.var = ph20, plot.name = "Volatility_ph20")
rug_plot(Volatility, y.var = Hb, z.var = phb, plot.name = "Volatility_phb")
source('~/Desktop/hong_tests_201912/hong_Volatility.R', echo=TRUE)
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2)) +
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
rug_plot(Volatility, y.var = H2, z.var = ph2, plot.name = "Volatility_ph2")
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
rug_plot(Volatility, y.var = H20, z.var = ph20, plot.name = "Volatility_ph20")
rug_plot(Volatility, y.var = Hb, z.var = phb, plot.name = "Volatility_phb")
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(Volatility, y.var = H1, z.var = ph1, plot.name = "Volatility_ph1")
rug_plot(Volatility, y.var = H2, z.var = ph2, plot.name = "Volatility_ph2")
rug_plot(Volatility, y.var = H10, z.var = ph10, plot.name = "Volatility_ph10")
rug_plot(Volatility, y.var = H20, z.var = ph20, plot.name = "Volatility_ph20")
rug_plot(Volatility, y.var = Hb, z.var = phb, plot.name = "Volatility_phb")
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(Residual, y.var = H1, z.var = ph1, plot.name = "Residual_ph1")
rug_plot(Residual, y.var = H2, z.var = ph2, plot.name = "Residual_ph2")
rug_plot(Residual, y.var = H10, z.var = ph10, plot.name = "Residual_ph10")
rug_plot(Residual, y.var = H20, z.var = ph20, plot.name = "Residual_ph20")
rug_plot(Residual, y.var = Hb, z.var = phb, plot.name = "Residual_phb")
#Importing
results <- read.csv("mgarch_Hong_Granger_Residual.csv")
#Renaming ----
results[, 1] <- NULL
colnames(results) <- c("date","H1","ph1","H2","ph2","H10","ph10","H20","ph20","Hb","phb")
Residual <- results
#Merging dates for graphing
Residual$date <- Sheets$Residual$Period[-1]
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
Residual$ph1 <- discrete(Residual$ph1)
Residual$ph2<- discrete(Residual$ph2)
Residual$ph10<- discrete(Residual$ph10)
Residual$ph20<- discrete(Residual$ph20)
Residual$phb<- discrete(Residual$phb)
#Exporting
write.csv(Residual, file="Residual.csv", row.names = F);
#Graphing
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(Residual, y.var = H1, z.var = ph1, plot.name = "Residual_ph1")
rug_plot(Residual, y.var = H2, z.var = ph2, plot.name = "Residual_ph2")
rug_plot(Residual, y.var = H10, z.var = ph10, plot.name = "Residual_ph10")
rug_plot(Residual, y.var = H20, z.var = ph20, plot.name = "Residual_ph20")
rug_plot(Residual, y.var = Hb, z.var = phb, plot.name = "Residual_phb")
#Importing
results <- read.csv("mgarch_Hong_Granger_Bond1.csv")
#Renaming ----
results[, 1] <- NULL
colnames(results) <- c("date","H1","ph1","H2","ph2","H10","ph10","H20","ph20","Hb","phb")
Bonds1 <- results
#Merging dates for graphing
Bonds1$date <- Sheets$Bonds1$Period[-1]
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
Bonds1$ph1 <- discrete(Bonds1$ph1)
Bonds1$ph2<- discrete(Bonds1$ph2)
Bonds1$ph10<- discrete(Bonds1$ph10)
Bonds1$ph20<- discrete(Bonds1$ph20)
Bonds1$phb<- discrete(Bonds1$phb)
#Exporting
write.csv(Bonds1, file="Bonds1.csv", row.names = F);
#Graphing
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(Bonds1, y.var = H1, z.var = ph1, plot.name = "Bonds1_ph1")
rug_plot(Bonds1, y.var = H2, z.var = ph2, plot.name = "Bonds1_ph2")
rug_plot(Bonds1, y.var = H10, z.var = ph10, plot.name = "Bonds1_ph10")
rug_plot(Bonds1, y.var = H20, z.var = ph20, plot.name = "Bonds1_ph20")
rug_plot(Bonds1, y.var = Hb, z.var = phb, plot.name = "Bonds1_phb")
source('~/Desktop/hong_tests_201912/hong_Bond1.R', echo=TRUE)
source('~/Desktop/hong_tests_201912/hong_Bond2.R', echo=TRUE)
source('~/Desktop/hong_tests_201912/hong_Bond3.R', echo=TRUE)
source('~/Desktop/hong_tests_201912/hong_Residual.R', echo=TRUE)
source('~/Desktop/hong_tests_201912/hong_Volatility.R', echo=TRUE)
source('~/Desktop/hong_tests_201912 copy/hong_Bond1.R', echo=TRUE)
