World<- readRDS(file = "/Users/xolanisibande/Desktop/EU_Analysis/Sweave/EU_2020_6/Data/Bloomberg.rds")
SA <- readRDS(file = "/Users/xolanisibande/Desktop/EU_Analysis/Sweave/EU_2020_6/Data/South_africa.rds")
Provinces <- readRDS(file = "/Users/xolanisibande/Desktop/EU_Analysis/Sweave/EU_2020_6/Data/Provinces.rds")
Industry<- readRDS(file = "/Users/xolanisibande/Desktop/EU_Analysis/Sweave/EU_2020_6/Data/Industry.rds")
Labour_profile <- readRDS(file = "/Users/xolanisibande/Desktop/EU_Analysis/Sweave/EU_2020_6/Data/Labour_profile.rds")
Employment <- readRDS(file = "/Users/xolanisibande/Desktop/EU_Analysis/Sweave/EU_2020_6/Data//Employment_industry.rds")
# Chunk 2
library("readxl")
library("dplyr")
library("tidyr")
library("purrr")
library("zoo")
library("ggplot2")
library("ggthemes")
library("stringr")
library("gridExtra")
library("knitr")
library("kableExtra")
library("magick")
library("stringi")
library("patchwork")
library("cowplot")
library("gghighlight")
library("xtable")
library("scales")
options(xtable.floating = FALSE)
theme <- theme_minimal(base_size = 6)  + theme(axis.text.x = element_text(angle = 90))
theme_set(theme)
col1 <- "#1E8BC3"
col2 <- "#2574A9"
col3 <-  "#3A539B"
col4 <-  "#1F3A93"
col5 <- "#34495E"
col6 <- "#4B77BE"
col7 <-"#67809F"
col8 <- "#5C97BF"
# Chunk 3
Subsaharan_GDP <- xtable(World$Subsahara_Africa_GDP[, c(1, 6:14)], auto = TRUE,  floating = TRUE, )
align(Subsaharan_GDP) <- "lp{2.5cm}YYYYYYYYY"
print(Subsaharan_GDP, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 4
Subsaharan_CPI <- xtable(World$Subsahara_Africa_CPI[, c(1, 6:14)], auto = TRUE)
align(Subsaharan_CPI) <- "lp{2.5cm}YYYYYYYYY"
print(Subsaharan_CPI, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 5
Americas_GDP <- xtable(World$Americas_GDP[, c(1, 6:14)], auto = TRUE)
align(Americas_GDP) <- "lp{2.5cm}YYYYYYYYY"
print(Americas_GDP, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 6
Americas_CPI <- xtable(World$Americas_CPI[, c(1, 6:14)], auto = TRUE)
align(Americas_CPI) <- "lp{2.5cm}YYYYYYYYY"
print(Americas_CPI, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 7
library(xtable)
Europe_GDP<- xtable(World$Europe_GDP[, c(1, 6:14)], auto = TRUE)
align(Europe_GDP) <- "lp{2.5cm}YYYYYYYYY"
print(Europe_GDP, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 8
Europe_CPI <- xtable(World$Europe_CPI[, c(1, 6:14)], auto = TRUE)
align(Europe_CPI) <- "lp{2.5cm}YYYYYYYYY"
print(Europe_CPI, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 9
Asia_GDP <- xtable(World$AsiaOceania_GDP[, c(1, 6:14)], auto = TRUE)
align(Asia_GDP) <- "lp{2.5cm}YYYYYYYYY"
print(Asia_GDP, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 10
Asia_CPI <- xtable(World$AsiaOceania_CPI[, c(1, 6:14)], auto = TRUE)
align(Asia_CPI) <- "lp{2.5cm}YYYYYYYYY"
print(Asia_CPI, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 11
SA$South_Africa_GDP$Period <- as.character(SA$South_Africa_GDP$Period)
South_africa_GDP <- xtable(SA$South_Africa_GDP, auto = TRUE)
align(South_africa_GDP) <- c("l","l","Y","Y","Y","Y")
print(South_africa_GDP, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 12
South_africa_industry <- xtable(Industry$South_Africa_Industry_Growth, auto = TRUE)
align(South_africa_industry) <- "lllYYYY"
print(South_africa_industry, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 13
SA$South_Africa_inv$Period <- as.character(SA$South_Africa_inv$Period)
South_africa_inv <- xtable(SA$South_Africa_inv, auto = TRUE)
align(South_africa_inv) <- c("l","l","Y","Y","Y", "Y")
print(South_africa_inv, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 14
South_africa_Labour <- xtable(Labour_profile$South_Africa_labour_profile, auto = TRUE)
align(South_africa_Labour) <- "lllYYYY"
print(South_africa_Labour, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 15
South_africa_employment <- xtable(Employment$South_Africa_Employment_Industry, auto = TRUE)
align(South_africa_employment) <- "lllYYYY"
print(South_africa_employment, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 16
SA$South_Africa_CPI$Period <- as.character(SA$South_Africa_CPI$Period)
South_africa_CPI <- xtable(SA$South_Africa_CPI, auto = TRUE)
align(South_africa_CPI) <- "llYYYYY"
print(South_africa_CPI, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 17
SA$South_Africa_BCI$Period <- as.character(SA$South_Africa_BCI$Period)
South_africa_BCI <- xtable(SA$South_Africa_BCI, auto = TRUE)
align(South_africa_BCI) <- "llYYYY"
print(South_africa_BCI, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 18
South_africa_CCI <- xtable(SA$South_Africa_CCI, auto = TRUE)
align(South_africa_CCI) <- "llYYYY"
print(South_africa_CCI, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 19
South_africa_Retail <- xtable(SA$South_Africa_Retail_Sales, auto = TRUE)
align(South_africa_Retail) <- "llYYYY"
print(South_africa_Retail, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 20
South_africa_Vehicle<- xtable(SA$South_Africa_Vehicle_Sales, auto = TRUE)
align(South_africa_Vehicle) <- "llYYYYYY"
print(South_africa_Vehicle, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 21
South_africa_Commodities<- xtable(SA$South_Africa_Commodity_Prices, auto = TRUE)
align(South_africa_Commodities) <- "llYYYYYY"
print(South_africa_Commodities, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 22
South_africa_Fuel <- xtable(SA$South_Africa_Fuel_Prices, auto = TRUE)
align(South_africa_Fuel) <- "llYYYY"
print(South_africa_Fuel, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 23
South_africa_Exc <- xtable(SA$South_Africa_exr, auto = TRUE)
align(South_africa_Exc) <- "llYYYYYYYY"
print(South_africa_Exc, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 24
SA$South_Africa_current_account$Period <- as.character(SA$South_Africa_current_account$Period)
South_africa_CA <- xtable(SA$South_Africa_current_account, auto = TRUE)
align(South_africa_CA ) <- "llYYYY"
print(South_africa_CA , include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 25
Provinces_GDP <- xtable(Provinces$Province_GDP, auto = TRUE)
align(Provinces_GDP) <- "llYYYYYYYYY"
print(Provinces_GDP, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 26
Provinces_growth_ind <- xtable(Industry$Province_Industry_Growth  , auto = TRUE)
align(Provinces_growth_ind) <- "lllYYYY"
print(Provinces_growth_ind, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 27
Provinces_labour <- xtable(Labour_profile$Province_labour_profile, auto = TRUE)
align(Provinces_labour) <- "lllYYYY"
print(Provinces_labour, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 28
Provinces$Province_Unemployment$Period <- as.character(Provinces$Province_Unemployment$Period)
Provinces_unemployment <- xtable(Provinces$Province_Unemployment, auto = TRUE)
align(Provinces_unemployment) <- "llYYYYYYYYY"
print(Provinces_unemployment, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 29
Provinces_employment <- xtable(Employment$Province_employment_industry, auto = TRUE)
align(Provinces_employment) <- "lllYYYY"
print(Provinces_employment, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 30
Provinces_CCI <- xtable(Provinces$Province_CCI, auto = TRUE)
align(Provinces_CCI ) <- "llYYYY"
print(Provinces_CCI, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
# Chunk 31
Provinces$Province_CPI$Period <- as.character(Provinces$Province_CPI$Period)
Provinces_CPI <- xtable(Provinces$Province_CPI, auto = TRUE)
align(Provinces_CPI ) <- "llYYYYYYYYY"
print(Provinces_CPI, include.rownames = FALSE, booktabs = TRUE, NA.string = "NA", tabular.environment = "tabularx", width = "\\textwidth", size = "\\tiny")
Industry
SA
source('~/Desktop/EU_Analysis/Sweave/EU_2020_6/Data/EU_analysis_data_cleanup.R', echo=TRUE)
South_Africa_table
South_Africa_table_clean
South_Africa_table <- list(EU_tables$South_Africa_GDP, EU_tables$South_Africa_CPI, EU_tables$South_Africa_BCI, EU_tables$South_Africa_Retail, EU_tables$South_Africa_CCI, EU_tables$South_Africa_Fuel_Prices, EU_tables$South_Africa_Vehicle_Sales, EU_tables$South_Africa_Commodity_Prices, EU_tables$South_Africa_current_account, EU_tables$South_Africa_exr, EU_tables$SA_investment)
South_Africa_table_clean <- lapply(South_Africa_table, South_Africa_clean)
names(South_Africa_table_clean) <- c("South_Africa_GDP", "South_Africa_CPI", "South_Africa_BCI", "South_Africa_Retail_Sales", "South_Africa_CCI", "South_Africa_Fuel_Prices", "South_Africa_Vehicle_Sales", "South_Africa_Commodity_Prices", "South_Africa_current_account", "South_Africa_exr", "South_Africa_inv")
#Date Conversion
South_Africa_names <- names(South_Africa_table_clean)
South_Africa_quarter_names <- South_Africa_names[c(1, 5, 9, 10, 11)]
South_Africa_month_names <- South_Africa_names[c(2, 3, 4, 6, 7, 8)]
for(i in South_Africa_quarter_names){
South_Africa_table_clean[[i]][1] <- South_Africa_table_clean[[i]][1] %>% map(Date_conversion_quarter)
}
for(i in South_Africa_month_names){
South_Africa_table_clean[[i]][1] <- South_Africa_table_clean[[i]][1] %>% map(Date_conversion_month)
}
South_Africa_table_clean
#Renaming South Africa Data Columns'
SA_GDP_names <- str_c(c("Period", "R million" ,"Annualised Quarter on Quarter", "Quarter on Quarter", "Year on Year"), sep = "," )
SA_CPI_names <- str_c(c("Period", "All Items", "Food and alcohol beverages", "Electricity and Other Fuels", "Water and Other Services", "Transport") , sep = ",")
SA_BCI_names <- str_c (c("Period", "Index", "Month to Month % Change", "Annualised Month to Month % Change", "Year to Year % Change"), sep = ",")
SA_CCI_names <- str_c (c("Period", "Index", "Month to Month % Change", "Annualised Month to Month % Change", "Year to Year % Change"), sep = ",")
SA_Retail_names <- str_c(c("Period", "R million", "Month to Month % Change", "Annualised Month to Month % Change", "Year to Year % Change"), sep = ",")
SA_Vehicle_names <- str_c(c("Period", "Total Sales", "Month to Month % Change", "Year to Year % Change", "Export Sales", "Month to Month % Change", "Year to Year % Change"), sep = ",")
SA_Commodities_names <- str_c(c("Period", "Gold (Rand)", "Month to Month % Change", "Platinum (Rand)",  "Month to Month % Change", "Brent Crude (Rand)", "Month to Month % Change"), sep = ",")
SA_Fuel_names <- str_c(c("Period", "93 Octane Unleaded", "95 Octane Unleaded", "Diesel - 0.005% Sulphur", "Diesel - 0.05% Sulphur"), sep = ",")
SA_Exc_names <- str_c(c("Period", "SA Rand per Dollar", "Quarter to Quarter % Change", "SA Rand per Pound", "Quarter to Quarter % Change", "SA Rand per Euro", "Quarter to Quarter % Change", "SA Rand per Japanese Yen", "Quarter to Quarter % Change") , sep=",")
SA_CA_names <- str_c(c("Period","Current Account to GDP (%)", "Quarter to Quarter % Change", "Quarter to Quarter % Change Annualised", "Year to Year % Change"), sep = ",")
SA_inv_names <- str_c(c("Period", " General Government", "Public Corporations", "Private Business", "Total"))
South_Africa_table_clean_rename <- South_Africa_table_clean
names(South_Africa_table_clean_rename$South_Africa_GDP) <-SA_GDP_names
names(South_Africa_table_clean_rename$South_Africa_CPI) <- SA_CPI_names
names(South_Africa_table_clean_rename$South_Africa_BCI) <- SA_BCI_names
names(South_Africa_table_clean_rename$South_Africa_CCI) <- SA_CCI_names
names(South_Africa_table_clean_rename$South_Africa_Retail_Sales) <- SA_Retail_names
names(South_Africa_table_clean_rename$South_Africa_Vehicle_Sales) <- SA_Vehicle_names
names(South_Africa_table_clean_rename$South_Africa_Commodity_Prices) <- SA_Commodities_names
names(South_Africa_table_clean_rename$South_Africa_Fuel_Prices) <- SA_Fuel_names
names(South_Africa_table_clean_rename$South_Africa_exr) <- SA_Exc_names
names(South_Africa_table_clean_rename$South_Africa_current_account) <- SA_CA_names
names(South_Africa_table_clean_rename$South_Africa_inv) <- SA_inv_names
South_Africa_table_clean_rename$South_Africa_GDP$Period <- as.character(South_Africa_table_clean_rename$South_Africa_GDP$Period)
South_Africa_table_clean_rename$South_Africa_CPI$Period <- as.character(South_Africa_table_clean_rename$South_Africa_CPI$Period)
South_Africa_table_clean_rename$South_Africa_BCI$Period <- as.character( South_Africa_table_clean_rename$South_Africa_BCI$Period)
South_Africa_table_clean_rename$South_Africa_CCI$Period <- as.character(South_Africa_table_clean_rename$South_Africa_CCI$Period)
South_Africa_table_clean_rename$South_Africa_Fuel_Prices$Period <- as.character(South_Africa_table_clean_rename$South_Africa_Fuel_Prices$Period)
South_Africa_table_clean_rename$South_Africa_Vehicle_Sales$Period <- as.character(South_Africa_table_clean_rename$South_Africa_Vehicle_Sales$Period)
South_Africa_table_clean_rename$South_Africa_Commodity_Prices$Period <- as.character(South_Africa_table_clean_rename$South_Africa_Commodity_Prices$Period)
South_Africa_table_clean_rename$South_Africa_current_account$Period <- as.character(South_Africa_table_clean_rename$South_Africa_current_account$Period )
South_Africa_table_clean_rename$South_Africa_exr$Period <- as.character(South_Africa_table_clean_rename$South_Africa_exr$Period)
South_Africa_table_clean_rename$South_Africa_Retail_Sales$Period <- as.character(South_Africa_table_clean_rename$South_Africa_Retail_Sales$Period)
South_Africa_table_clean_rename
Industry_Growth_Clean_rename
#Renaming Labour Profile Data
industry_quarters <- as.yearqtr(seq(as.Date("2018-10-01"), as.Date("2019-10-01"), by = "quarters"), format = "%YQ%q")
Industry_names <- c("", "Measure", as.character(industry_quarters))
Labour_profile_table_clean <- list(South_Africa_labour_profile_clean, Province_labour_profile_clean)
names(Labour_profile_table_clean) <- c("South_Africa_labour_profile", "Province_labour_profile")
Labour_profile_table_clean_rename <- lapply(Labour_profile_table_clean, setNames, Industry_names)
#Renaming Employment Data
Employment_industry_clean_rename <- lapply(Employment_industry_clean, setNames, Industry_names)
#Renaming Industry Growth Data
Industry_Growth_Clean_rename <- lapply(Industry_Growth_Clean,setNames, Industry_names)
Industry_Growth_Clean_rename
Industry_Growth
Industry_Growth_Clean
Industry_growth_clean <- function(data){
df <- data %>%
slice(2:n()) %>%
select(-c(...2, ...4:...19)) %>%
mutate_if(is.numeric, round, digits = 2) %>%
mutate(...1 = str_replace(...1, "Industry value added and GDP: ", "")) %>%
mutate(...1 = str_replace(...1, "&", "and")) %>%
mutate(...1 = str_replace(...1, " & ", " and "))%>%
mutate(...1 = str_replace(...1, "P7: Gauteng — GVA01: ", "")) %>%
mutate(...1 = str_replace(...1, "P7: Gauteng — GVA02: ", "")) %>%
mutate(...1 = str_replace(...1, "P7: Gauteng — GVA03: ", "")) %>%
mutate(...1 = str_replace(...1, "P7: Gauteng — GVA04: ", "")) %>%
mutate(...1 = str_replace(...1, "P7: Gauteng — GVA05: ", "")) %>%
mutate(...1 = str_replace(...1, "P7: Gauteng — GVA06: ", "")) %>%
mutate(...1 = str_replace(...1, "P7: Gauteng — GVA07: ", "")) %>%
mutate(...1 = str_replace(...1, "P7: Gauteng — GVA08: ", "")) %>%
mutate(...1 = str_replace(...1, "P7: Gauteng — GVA09: ", "")) %>%
mutate(...1 = str_replace(...1, "P7: Gauteng — GVA10: ", "")) %>%
mutate(...3 = str_replace(...3, "%", "Percent")) %>%
mutate(...3 = str_replace(...3, " % ", " Percent ")) %>%
mutate(...1 = str_replace(...1, ", seasonally adjusted and annualised", "")) %>%
mutate(...3 = str_replace(...3, ", seasonally adjusted and annualised", "")) %>%
mutate(...1 = str_replace(...1, "— R million at constant 2010 prices", "")) %>%
mutate(...3 = str_replace(...3, "Constant 2010 prices:", "")) %>%
mutate(...3 = str_replace(...3, " at constant 2010 prices", "")) %>%
mutate(...3 = str_replace(...3, "Seasonally adjusted", "")) %>%
mutate(...3 = str_replace(...3, "R million", "")) %>%
mutate(...3 = str_replace(...3, "\\(\\) ", "")) %>%
mutate(...3 = str_replace(...3, "\\(", "")) %>%
mutate(...1 = str_replace(...1, " at basic prices", "")) %>%
mutate(...1 = str_replace(...1, ": Gross value added \\(GVA\\)", "")) %>%
mutate(...3 = str_replace(...3, "\\)", ""))  %>%
mutate(...3 = str_replace(...3, "Period on Period Percent Change", "% Change")) %>%
mutate(...3 = str_replace(...3, "Year on Year Percent Change", "% Change \\(Year on Year\\)"))
}
Industry_Growth <- list(EU_tables$South_Africa_growth_industry, EU_tables$Province_growth_industry)
Industry_Growth_Clean <- lapply(Industry_Growth, Industry_growth_clean)
source('~/Desktop/EU_Analysis/Sweave/EU_2020_6/Data/EU_analysis_data_cleanup.R', echo=TRUE)
Industry_Growth_Clean_rename <- lapply(Industry_Growth_Clean,setNames, Industry_names)
Industry_Growth_Clean_rename
source('~/Desktop/EU_Analysis/Sweave/EU_2020_6/Data/EU_analysis_data_cleanup.R', echo=TRUE)
Industry_Growth_Clean_rename
#Renaming Labour Profile Data
industry_quarters <- as.yearqtr(seq(as.Date("2019-01-01"), as.Date("2019-10-01"), by = "quarters"), format = "%YQ%q")
Industry_names <- c("", "Measure", as.character(industry_quarters))
Labour_profile_table_clean <- list(South_Africa_labour_profile_clean, Province_labour_profile_clean)
names(Labour_profile_table_clean) <- c("South_Africa_labour_profile", "Province_labour_profile")
Labour_profile_table_clean_rename <- lapply(Labour_profile_table_clean, setNames, Industry_names)
#Renaming Employment Data
Employment_industry_clean_rename <- lapply(Employment_industry_clean, setNames, Industry_names)
#Renaming Industry Growth Data
Industry_Growth_Clean_rename <- lapply(Industry_Growth_Clean,setNames, Industry_names)
Industry_Growth_Clean_rename
Industry_Growth_Clea
Industry_Growth_Clean
source('~/Desktop/EU_Analysis/Sweave/EU_2020_6/Data/EU_analysis_data_cleanup.R', echo=TRUE)
Industry_Growth_Clean_rename
source('~/Desktop/EU_Analysis/Sweave/EU_2020_6/Data/EU_analysis_data_cleanup.R', echo=TRUE)
Labour_profile_table_clean_rename
source('~/Desktop/EU_Analysis/Sweave/EU_2020_6/Data/EU_analysis_data_cleanup.R', echo=TRUE)
source('~/Desktop/EU_Analysis/Sweave/EU_2020_6/Data/EU_analysis_data_cleanup.R', echo=TRUE)
source('~/Desktop/DCC_Causality/hong_tests_202005/hong_monthly_dollar_pound_returns_residuals.R', echo=TRUE)
setwd("/Users/xolanisibande/Desktop/hong_tests_202005")
source('~/Desktop/DCC_Causality/hong_tests_202005/hong_monthly_dollar_pound_returns_residuals.R', echo=TRUE)
dollar_pound_monthly_residuals$ph1[1] <- 0
source('~/Desktop/DCC_Causality/hong_tests_202005/hong_monthly_dollar_pound_returns_residuals.R', echo=TRUE)
#Merging dates for graphing
dollar_pound_monthly_residuals$date <- as.yearmon(monthly_dates_residuals[-c(1:4)],  format = "%Y-%m-%d")
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
dollar_pound_monthly_residuals$ph1 <- discrete(dollar_pound_monthly_residuals$ph1)
dollar_pound_monthly_residuals$ph1[1] <- 0
dollar_pound_monthly_residuals$ph2<- discrete(dollar_pound_monthly_residuals$ph2)
dollar_pound_monthly_residuals$ph10<- discrete(dollar_pound_monthly_residuals$ph10)
dollar_pound_monthly_residuals$ph20<- discrete(dollar_pound_monthly_residuals$ph20)
dollar_pound_monthly_residuals$phb<- discrete(dollar_pound_monthly_residuals$phb)
#Exporting
write.csv(dollar_pound_monthly_residuals, file="dollar_pound_monthly_residuals.csv", row.names = F);
#Graphing
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(dollar_pound_monthly_residuals, y.var = H1, z.var = ph1, plot.name = "dollar_pound_monthly_residuals_ph1")
rug_plot(dollar_pound_monthly_residuals, y.var = H2, z.var = ph2, plot.name = "dollar_pound_monthly_residuals_ph2")
rug_plot(dollar_pound_monthly_residuals, y.var = H10, z.var = ph10, plot.name = "dollar_pound_monthly_residuals_ph10")
rug_plot(dollar_pound_monthly_residuals, y.var = H20, z.var = ph20, plot.name = "dollar_pound_monthly_residuals_ph20")
rug_plot(dollar_pound_monthly_residuals, y.var = Hb, z.var = phb, plot.name = "dollar_pound_monthly_residuals_phb")
#Merging dates for graphing
dollar_pound_monthly_residuals$date <- as.yearmon(monthly_dates_residuals[-c(1:4)],  format = "%Y-%m-%d")
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
dollar_pound_monthly_residuals$ph1 <- discrete(dollar_pound_monthly_residuals$ph1)
dollar_pound_monthly_residuals$ph1[1] <- 0
dollar_pound_monthly_residuals$ph2<- discrete(dollar_pound_monthly_residuals$ph2)
dollar_pound_monthly_residuals$ph10<- discrete(dollar_pound_monthly_residuals$ph10)
dollar_pound_monthly_residuals$ph20<- discrete(dollar_pound_monthly_residuals$ph20)
dollar_pound_monthly_residuals$phb<- discrete(dollar_pound_monthly_residuals$phb)
#Exporting
write.csv(dollar_pound_monthly_residuals, file="dollar_pound_monthly_residuals.csv", row.names = F);
#Graphing
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(dollar_pound_monthly_residuals, y.var = H1, z.var = ph1, plot.name = "dollar_pound_monthly_residuals_ph1")
rug_plot(dollar_pound_monthly_residuals, y.var = H2, z.var = ph2, plot.name = "dollar_pound_monthly_residuals_ph2")
rug_plot(dollar_pound_monthly_residuals, y.var = H10, z.var = ph10, plot.name = "dollar_pound_monthly_residuals_ph10")
rug_plot(dollar_pound_monthly_residuals, y.var = H20, z.var = ph20, plot.name = "dollar_pound_monthly_residuals_ph20")
rug_plot(dollar_pound_monthly_residuals, y.var = Hb, z.var = phb, plot.name = "dollar_pound_monthly_residuals_phb")
source('~/Desktop/DCC_Causality/hong_tests_202005/hong_monthly_dollar_pound_returns_residuals.R', echo=TRUE)
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
dollar_pound_monthly_residuals$ph1 <- discrete(dollar_pound_monthly_residuals$ph1)
dollar_pound_monthly_residuals$ph1[1] <- 0
dollar_pound_monthly_residuals$ph2<- discrete(dollar_pound_monthly_residuals$ph2)
dollar_pound_monthly_residuals$ph10<- discrete(dollar_pound_monthly_residuals$ph10)
dollar_pound_monthly_residuals$ph20<- discrete(dollar_pound_monthly_residuals$ph20)
dollar_pound_monthly_residuals$phb<- discrete(dollar_pound_monthly_residuals$phb)
#Exporting
write.csv(dollar_pound_monthly_residuals, file="dollar_pound_monthly_residuals.csv", row.names = F);
#Graphing
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(dollar_pound_monthly_residuals, y.var = H1, z.var = ph1, plot.name = "dollar_pound_monthly_residuals_ph1")
rug_plot(dollar_pound_monthly_residuals, y.var = H2, z.var = ph2, plot.name = "dollar_pound_monthly_residuals_ph2")
rug_plot(dollar_pound_monthly_residuals, y.var = H10, z.var = ph10, plot.name = "dollar_pound_monthly_residuals_ph10")
rug_plot(dollar_pound_monthly_residuals, y.var = H20, z.var = ph20, plot.name = "dollar_pound_monthly_residuals_ph20")
rug_plot(dollar_pound_monthly_residuals, y.var = Hb, z.var = phb, plot.name = "dollar_pound_monthly_residuals_phb")
dollar_pound_monthly_residuals$ph1 <- discrete(dollar_pound_monthly_residuals$ph1)
dollar_pound_monthly_residuals$ph1[1] <- 0
dollar_pound_monthly_residuals$ph1
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
dollar_pound_monthly_residuals$ph1 <- discrete(dollar_pound_monthly_residuals$ph1)
dollar_pound_monthly_residuals$ph1[1] <- 0
dollar_pound_monthly_residuals$ph2<- discrete(dollar_pound_monthly_residuals$ph2)
dollar_pound_monthly_residuals$ph10<- discrete(dollar_pound_monthly_residuals$ph10)
dollar_pound_monthly_residuals$ph20<- discrete(dollar_pound_monthly_residuals$ph20)
dollar_pound_monthly_residuals$phb<- discrete(dollar_pound_monthly_residuals$phb)
#Exporting
write.csv(dollar_pound_monthly_residuals, file="dollar_pound_monthly_residuals.csv", row.names = F);
dollar_pound_monthly_residuals$date <- as.yearmon(monthly_dates_residuals[-c(1:4)],  format = "%Y-%m-%d")
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
dollar_pound_monthly_residuals$ph1 <- discrete(dollar_pound_monthly_residuals$ph1)
dollar_pound_monthly_residuals$ph2<- discrete(dollar_pound_monthly_residuals$ph2)
dollar_pound_monthly_residuals$ph10<- discrete(dollar_pound_monthly_residuals$ph10)
dollar_pound_monthly_residuals$ph20<- discrete(dollar_pound_monthly_residuals$ph20)
dollar_pound_monthly_residuals$phb<- discrete(dollar_pound_monthly_residuals$phb)
#Exporting
write.csv(dollar_pound_monthly_residuals, file="dollar_pound_monthly_residuals.csv", row.names = F);
#Importing
results <- read.csv("mgarch_Hong_Granger_dollar_pound_monthly_residuals.csv")
#Renaming ----
results[, 1] <- NULL
colnames(results) <- c("date","H1","ph1","H2","ph2","H10","ph10","H20","ph20","Hb","phb")
dollar_pound_monthly_residuals <- results
#Merging dates for graphing
dollar_pound_monthly_residuals$date <- as.yearmon(monthly_dates_residuals[-c(1:4)],  format = "%Y-%m-%d")
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
dollar_pound_monthly_residuals$ph1 <- discrete(dollar_pound_monthly_residuals$ph1)
dollar_pound_monthly_residuals$ph2<- discrete(dollar_pound_monthly_residuals$ph2)
dollar_pound_monthly_residuals$ph10<- discrete(dollar_pound_monthly_residuals$ph10)
dollar_pound_monthly_residuals$ph20<- discrete(dollar_pound_monthly_residuals$ph20)
dollar_pound_monthly_residuals$phb<- discrete(dollar_pound_monthly_residuals$phb)
#Exporting
write.csv(dollar_pound_monthly_residuals, file="dollar_pound_monthly_residuals.csv", row.names = F);
dollar_pound_monthly_residuals$ph1 <- discrete(dollar_pound_monthly_residuals$ph1)
dollar_pound_monthly_residuals$ph1[1] <- 0
dollar_pound_monthly_residuals$ph1
results <- read.csv("mgarch_Hong_Granger_dollar_pound_monthly_residuals.csv")
#Renaming ----
results[, 1] <- NULL
colnames(results) <- c("date","H1","ph1","H2","ph2","H10","ph10","H20","ph20","Hb","phb")
dollar_pound_monthly_residuals <- results
#Merging dates for graphing
dollar_pound_monthly_residuals$date <- as.yearmon(monthly_dates_residuals[-c(1:4)],  format = "%Y-%m-%d")
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
dollar_pound_monthly_residuals$ph1 <- discrete(dollar_pound_monthly_residuals$ph1)
dollar_pound_monthly_residuals$ph1[1,1] <- 0
dollar_pound_monthly_residuals$ph1
str(dollar_pound_monthly_residuals$ph1)
#Importing
results <- read.csv("mgarch_Hong_Granger_dollar_pound_monthly_residuals.csv")
#Renaming ----
results[, 1] <- NULL
colnames(results) <- c("date","H1","ph1","H2","ph2","H10","ph10","H20","ph20","Hb","phb")
dollar_pound_monthly_residuals <- results
#Merging dates for graphing
dollar_pound_monthly_residuals$date <- as.yearmon(monthly_dates_residuals[-c(1:4)],  format = "%Y-%m-%d")
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
dollar_pound_monthly_residuals$ph1 <- discrete(dollar_pound_monthly_residuals$ph1)
dollar_pound_monthly_residuals$ph1[1] <- 0
dollar_pound_monthly_residuals$ph1
rug_plot(dollar_pound_monthly_residuals, y.var = H1, z.var = ph1, plot.name = "dollar_pound_monthly_residuals_ph1")
#Importing
results <- read.csv("mgarch_Hong_Granger_dollar_pound_monthly_residuals.csv")
#Renaming ----
results[, 1] <- NULL
colnames(results) <- c("date","H1","ph1","H2","ph2","H10","ph10","H20","ph20","Hb","phb")
dollar_pound_monthly_residuals <- results
#Merging dates for graphing
dollar_pound_monthly_residuals$date <- as.yearmon(monthly_dates_residuals[-c(1:4)],  format = "%Y-%m-%d")
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
dollar_pound_monthly_residuals$ph1 <- discrete(dollar_pound_monthly_residuals$ph1)
dollar_pound_monthly_residuals$ph1[1] <- 0
dollar_pound_monthly_residuals$ph2<- discrete(dollar_pound_monthly_residuals$ph2)
dollar_pound_monthly_residuals$ph10<- discrete(dollar_pound_monthly_residuals$ph10)
dollar_pound_monthly_residuals$ph10[1] <- 0
dollar_pound_monthly_residuals$ph20<- discrete(dollar_pound_monthly_residuals$ph20)
dollar_pound_monthly_residuals$phb<- discrete(dollar_pound_monthly_residuals$phb)
dollar_pound_monthly_residuals$phb[1] <- 0
#Exporting
write.csv(dollar_pound_monthly_residuals, file="dollar_pound_monthly_residuals.csv", row.names = F);
#Graphing
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(dollar_pound_monthly_residuals, y.var = H1, z.var = ph1, plot.name = "dollar_pound_monthly_residuals_ph1")
rug_plot(dollar_pound_monthly_residuals, y.var = H2, z.var = ph2, plot.name = "dollar_pound_monthly_residuals_ph2")
rug_plot(dollar_pound_monthly_residuals, y.var = H10, z.var = ph10, plot.name = "dollar_pound_monthly_residuals_ph10")
rug_plot(dollar_pound_monthly_residuals, y.var = H20, z.var = ph20, plot.name = "dollar_pound_monthly_residuals_ph20")
rug_plot(dollar_pound_monthly_residuals, y.var = Hb, z.var = phb, plot.name = "dollar_pound_monthly_residuals_phb")
