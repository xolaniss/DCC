# DCC-GARCH+ time-varying Haugh and Hong tests
# using DCC-GARCH to get the correlation coeffecients with lag i, -k<i<k, k; diagonal GARCH model estimation
# M is the lag order in the statistics;
# Barllet functions, M
#Preliminary ----
library(ccgarch)
library(dplyr)
library(purrr)
library(readxl)
library(stringr)
library(zoo)
library(tidyverse)
setwd("/Users/xolanisibande/DCC/CME_hong_tests/cme_variance, news_sentiment_6")
rm(list=ls())
Sys.setenv(TZ="Africa/Johannesburg")
theme <- theme_minimal(base_size = 6)  + theme(axis.text.x = element_text(angle = 90))
theme_set(theme)
col1 <- "#ffffff"
col2 <- "#000000"
# Importing Sheets ----
data <-read.csv("/Users/xolanisibande/DCC/CME_hong_tests/sentiment.csv", stringsAsFactors = FALSE)
source('~/DCC/CME_hong_tests/cme_variance, news_sentiment_6/hong.R', echo=TRUE)
source('~/DCC/CME_hong_tests/cme_returns, daily_infect_emv_index_5/hong.R', echo=TRUE)
# DCC-GARCH+ time-varying Haugh and Hong tests
# using DCC-GARCH to get the correlation coeffecients with lag i, -k<i<k, k; diagonal GARCH model estimation
# M is the lag order in the statistics;
# Barllet functions, M
#Preliminary ----
library(ccgarch)
library(dplyr)
library(purrr)
library(readxl)
library(stringr)
library(zoo)
library(tidyverse)
setwd("/Users/xolanisibande/DCC/CME_hong_tests/cme_returns, daily_infect_emv_index_5")
rm(list=ls())
Sys.setenv(TZ="Africa/Johannesburg")
theme <- theme_minimal(base_size = 6)  + theme(axis.text.x = element_text(angle = 90))
theme_set(theme)
col1 <- "#ffffff"
col2 <- "#000000"
# Importing Sheets ----
data <-read.csv("/Users/xolanisibande/DCC/CME_hong_tests/infections.csv", stringsAsFactors = FALSE)
# Cleaning ----
str(data)
data[,]==0 <- 0.00000001
# using DCC-GARCH to get the correlation coeffecients with lag i, -k<i<k, k; diagonal GARCH model estimation
# M is the lag order in the statistics;
# Barllet functions, M
#Preliminary ----
library(ccgarch)
library(dplyr)
library(purrr)
library(readxl)
library(stringr)
library(zoo)
library(tidyverse)
setwd("/Users/xolanisibande/DCC/CME_hong_tests/cme_returns, daily_infect_emv_index_5")
rm(list=ls())
Sys.setenv(TZ="Africa/Johannesburg")
theme <- theme_minimal(base_size = 6)  + theme(axis.text.x = element_text(angle = 90))
theme_set(theme)
col1 <- "#ffffff"
col2 <- "#000000"
# Importing Sheets ----
data <-read.csv("/Users/xolanisibande/DCC/CME_hong_tests/infections.csv", stringsAsFactors = FALSE)
# Cleaning ----
str(data)
str_replace_all(data, 0, 0.00000001)
# DCC-GARCH+ time-varying Haugh and Hong tests
# using DCC-GARCH to get the correlation coeffecients with lag i, -k<i<k, k; diagonal GARCH model estimation
# M is the lag order in the statistics;
# Barllet functions, M
#Preliminary ----
library(ccgarch)
library(dplyr)
library(purrr)
library(readxl)
library(stringr)
library(zoo)
library(tidyverse)
setwd("/Users/xolanisibande/DCC/CME_hong_tests/cme_returns, daily_infect_emv_index_5")
rm(list=ls())
Sys.setenv(TZ="Africa/Johannesburg")
theme <- theme_minimal(base_size = 6)  + theme(axis.text.x = element_text(angle = 90))
theme_set(theme)
col1 <- "#ffffff"
col2 <- "#000000"
# Importing Sheets ----
data <-read.csv("/Users/xolanisibande/DCC/CME_hong_tests/infections.csv", stringsAsFactors = FALSE)
# Cleaning ----
str(data)
str_replace_all(data, "0", "0.00000001")
# DCC-GARCH+ time-varying Haugh and Hong tests
# using DCC-GARCH to get the correlation coeffecients with lag i, -k<i<k, k; diagonal GARCH model estimation
# M is the lag order in the statistics;
# Barllet functions, M
#Preliminary ----
library(ccgarch)
library(dplyr)
library(purrr)
library(readxl)
library(stringr)
library(zoo)
library(tidyverse)
setwd("/Users/xolanisibande/DCC/CME_hong_tests/cme_returns, daily_infect_emv_index_5")
rm(list=ls())
Sys.setenv(TZ="Africa/Johannesburg")
theme <- theme_minimal(base_size = 6)  + theme(axis.text.x = element_text(angle = 90))
theme_set(theme)
col1 <- "#ffffff"
col2 <- "#000000"
# Importing Sheets ----
data <-read.csv("/Users/xolanisibande/DCC/CME_hong_tests/infections.csv", stringsAsFactors = FALSE)
# DCC-GARCH+ time-varying Haugh and Hong tests
# using DCC-GARCH to get the correlation coeffecients with lag i, -k<i<k, k; diagonal GARCH model estimation
# M is the lag order in the statistics;
# Barllet functions, M
#Preliminary ----
library(ccgarch)
library(dplyr)
library(purrr)
library(readxl)
library(stringr)
library(zoo)
library(tidyverse)
setwd("/Users/xolanisibande/DCC/CME_hong_tests/cme_returns, daily_infect_emv_index_5")
rm(list=ls())
Sys.setenv(TZ="Africa/Johannesburg")
theme <- theme_minimal(base_size = 6)  + theme(axis.text.x = element_text(angle = 90))
theme_set(theme)
col1 <- "#ffffff"
col2 <- "#000000"
# Importing Sheets ----
data <-read.csv("/Users/xolanisibande/DCC/CME_hong_tests/infections.csv", stringsAsFactors = FALSE)
# Cleaning ----
str(data)
data[data==0] <- 0.00000001
source('~/DCC/CME_hong_tests/cme_returns, daily_infect_emv_index_5/hong.R', echo=TRUE)
source('~/DCC/CME_hong_tests/cme_variance, news_sentiment_6/hong.R', echo=TRUE)
results$date <- as.yearmon(data$date[-c(1:5)],  format = "%Y-%m-%d")
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
results$ph1 <- discrete(results$ph1)
results$ph2<- discrete(results$ph2)
results$ph10<- discrete(results$ph10)
results$ph20<- discrete(results$ph20)
results$phb<- discrete(results$phb)
results$ph1[1,] <- 1
#Exporting
write.csv(results, file="results.csv", row.names = F);
#Graphing
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality Test Statistic", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(results, y.var = H1, z.var = ph1, plot.name = "results_ph1")
rug_plot(results, y.var = H2, z.var = ph2, plot.name = "results_ph2")
rug_plot(results, y.var = H10, z.var = ph10, plot.name = "results_ph10")
rug_plot(results, y.var = H20, z.var = ph20, plot.name = "results_ph20")
rug_plot(results, y.var = Hb, z.var = phb, plot.name = "results_phb")
results$date <- as.yearmon(data$date[-c(1:5)],  format = "%Y-%m-%d")
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
results$ph1 <- discrete(results$ph1)
results$ph2<- discrete(results$ph2)
results$ph10<- discrete(results$ph10)
results$ph20<- discrete(results$ph20)
results$phb<- discrete(results$phb)
results$ph1[1] <- 1
#Exporting
write.csv(results, file="results.csv", row.names = F);
#Graphing
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_yearmon() +
labs(x = "", y = "Causality Test Statistic", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(results, y.var = H1, z.var = ph1, plot.name = "results_ph1")
rug_plot(results, y.var = H2, z.var = ph2, plot.name = "results_ph2")
rug_plot(results, y.var = H10, z.var = ph10, plot.name = "results_ph10")
rug_plot(results, y.var = H20, z.var = ph20, plot.name = "results_ph20")
rug_plot(results, y.var = Hb, z.var = phb, plot.name = "results_phb")
source('~/DCC/CME_hong_tests/cme_variance, daily_infect_emv_index_7/hong.R', echo=TRUE)
source('~/DCC/CME_hong_tests/cme_returns, news_sentiment_6/hong.R', echo=TRUE)
source('~/DCC/CME_hong_tests/cme_returns, news_sentiment_6/hong.R', echo=TRUE)
source('~/DCC/CME_hong_tests/cme_variance, news_sentiment_6/hong.R', echo=TRUE)
source('~/DCC/CME_hong_tests/cme_variance, news_sentiment_6/hong.R', echo=TRUE)
source('~/DCC/CME_hong_tests/cme_returns, daily_infect_emv_index_5/hong.R', echo=TRUE)
#Merging dates for graphing
results$date <- data$date[-c(1:4)]
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
results$ph1 <- discrete(results$ph1)
results$ph2<- discrete(results$ph2)
results$ph10<- discrete(results$ph10)
results$ph20<- discrete(results$ph20)
results$phb<- discrete(results$phb)
#Exporting
write.csv(results, file="results.csv", row.names = F);
#Graphing
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_date(labels=date_format("%b %y"))
labs(x = "", y = "Causality Test Statistic", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(results, y.var = H1, z.var = ph1, plot.name = "results_ph1")
rug_plot(results, y.var = H2, z.var = ph2, plot.name = "results_ph2")
rug_plot(results, y.var = H10, z.var = ph10, plot.name = "results_ph10")
rug_plot(results, y.var = H20, z.var = ph20, plot.name = "results_ph20")
rug_plot(results, y.var = Hb, z.var = phb, plot.name = "results_phb")
results$date <- data$date[-c(1:4)]
# Discrete p values
discrete <- function(pvalue) {
case_when(pvalue < 0.05 ~ "1", pvalue > 0.05 ~ "0", TRUE ~ "Other")
}
results$ph1 <- discrete(results$ph1)
results$ph2<- discrete(results$ph2)
results$ph10<- discrete(results$ph10)
results$ph20<- discrete(results$ph20)
results$phb<- discrete(results$phb)
#Exporting
write.csv(results, file="results.csv", row.names = F);
#Graphing
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_date(labels=date_format("%b %y"))+
labs(x = "", y = "Causality Test Statistic", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(results, y.var = H1, z.var = ph1, plot.name = "results_ph1")
rug_plot(results, y.var = H2, z.var = ph2, plot.name = "results_ph2")
rug_plot(results, y.var = H10, z.var = ph10, plot.name = "results_ph10")
rug_plot(results, y.var = H20, z.var = ph20, plot.name = "results_ph20")
rug_plot(results, y.var = Hb, z.var = phb, plot.name = "results_phb")
library(scales)
results$ph1 <- discrete(results$ph1)
results$ph2<- discrete(results$ph2)
results$ph10<- discrete(results$ph10)
results$ph20<- discrete(results$ph20)
results$phb<- discrete(results$phb)
#Exporting
write.csv(results, file="results.csv", row.names = F);
#Graphing
rug_plot <- function(data, y.var, z.var, plot.name) {
y.var <- enquo(y.var)
z.var <- enquo(z.var)
plot.name <- rlang::sym(plot.name)
plot<- data %>%
ggplot(aes(x = date, y = !! y.var )) +
geom_line() +
geom_rug(aes(color= !! z.var), inherit.aes = T, sides = "b", show.legend = F) +
scale_x_date(labels=date_format("%b %y")) +
labs(x = "", y = "Causality Test Statistic", subtitle = "") +
scale_color_manual(values = c(col1, col2))
ggsave(plot, file=paste(plot.name,"_graph", ".png", sep=''), scale = 1, width=7, height=7)
}
rug_plot(results, y.var = H1, z.var = ph1, plot.name = "results_ph1")
rug_plot(results, y.var = H2, z.var = ph2, plot.name = "results_ph2")
rug_plot(results, y.var = H10, z.var = ph10, plot.name = "results_ph10")
rug_plot(results, y.var = H20, z.var = ph20, plot.name = "results_ph20")
rug_plot(results, y.var = Hb, z.var = phb, plot.name = "results_phb")
source('~/DCC/CME_hong_tests/cme_returns, daily_infect_emv_index_5/hong.R', echo=TRUE)
source('~/DCC/CME_hong_tests/cme_variance, news_sentiment_6/hong.R', echo=TRUE)
source('~/DCC/CME_hong_tests/cme_returns, daily_infect_emv_index_5/hong.R', echo=TRUE)
source('~/DCC/CME_hong_tests/cme_variance, news_sentiment_6/hong.R', echo=TRUE)
source('~/DCC/CME_hong_tests/cme_returns, news_sentiment_6/hong.R', echo=TRUE)
source('~/DCC/CME_hong_tests/cme_variance, daily_infect_emv_index_7/hong.R', echo=TRUE)
